From d20ebc2e9c82b91075df9b11dbc11362d352fef3 Mon Sep 17 00:00:00 2001
From: Asen Alexandrov <alexandrov@vmware.com>
Date: Wed, 26 Oct 2022 19:11:13 +0300
Subject: [PATCH 1/2] Patch to build sqlite-3.39.2 for wasm32-wasi


  50.2% src/
  46.9% wasmlabs-stubs/
diff --git a/.gitignore b/.gitignore
new file mode 100644
index 0000000..e6c1dcf
--- /dev/null
+++ b/.gitignore
@@ -0,0 +1 @@
+/wasmlabs-output/
\ No newline at end of file
diff --git a/src/os_unix.c b/src/os_unix.c
index b933de3..79005a8 100644
--- a/src/os_unix.c
+++ b/src/os_unix.c
@@ -457,7 +457,11 @@ static struct unix_syscall {
 #define osPwrite64  ((ssize_t(*)(int,const void*,size_t,off64_t))\
                     aSyscall[13].pCurrent)
 
+#if !defined(WASM_WASI)
   { "fchmod",       (sqlite3_syscall_ptr)fchmod,          0  },
+#else
+  { "fchmod",       (sqlite3_syscall_ptr)0,          0  },
+#endif
 #define osFchmod    ((int(*)(int,mode_t))aSyscall[14].pCurrent)
 
 #if defined(HAVE_POSIX_FALLOCATE) && HAVE_POSIX_FALLOCATE
@@ -479,14 +483,14 @@ static struct unix_syscall {
   { "rmdir",        (sqlite3_syscall_ptr)rmdir,           0 },
 #define osRmdir     ((int(*)(const char*))aSyscall[19].pCurrent)
 
-#if defined(HAVE_FCHOWN)
+#if defined(HAVE_FCHOWN) && !defined(WASM_WASI)
   { "fchown",       (sqlite3_syscall_ptr)fchown,          0 },
 #else
   { "fchown",       (sqlite3_syscall_ptr)0,               0 },
 #endif
 #define osFchown    ((int(*)(int,uid_t,gid_t))aSyscall[20].pCurrent)
 
-#if defined(HAVE_FCHOWN)
+#if defined(HAVE_FCHOWN) && !defined(WASM_WASI)
   { "geteuid",      (sqlite3_syscall_ptr)geteuid,         0 },
 #else
   { "geteuid",      (sqlite3_syscall_ptr)0,               0 },
@@ -8020,6 +8024,8 @@ int sqlite3_os_init(void){
     UNIXVFS("unix",          autolockIoFinder ),
 #elif OS_VXWORKS
     UNIXVFS("unix",          vxworksIoFinder ),
+#elif WASM_WASI
+    UNIXVFS("unix",          dotlockIoFinder ),
 #else
     UNIXVFS("unix",          posixIoFinder ),
 #endif
diff --git a/wasmlabs-stubs/fcntl.h b/wasmlabs-stubs/fcntl.h
new file mode 100644
index 0000000..c0f8abb
--- /dev/null
+++ b/wasmlabs-stubs/fcntl.h
@@ -0,0 +1,20 @@
+#pragma once
+
+#include_next<fcntl.h>
+
+#ifdef WASM_WASI
+
+#define F_RDLCK 0
+#define F_WRLCK 1
+#define F_UNLCK 2
+#if __LONG_MAX == 0x7fffffffL
+#define F_GETLK 12
+#define F_SETLK 13
+#define F_SETLKW 14
+#else
+#define F_GETLK 5
+#define F_SETLK 6
+#define F_SETLKW 7
+#endif
+
+#endif //WASM_WASI
-- 
2.38.1

