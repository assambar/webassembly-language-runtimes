# Note that for this workflow to be triggered, the tag needs to be
# created of the form `python/<version>+<buildinfo>`, where <buildinfo>
# by convention is YYYYMMDD-<short-sha> (short SHA can be calculated
# with `git rev-parse --short HEAD`). An example of a tag following
# the convention that triggers automation would be
# `python/3.11.1+20221123-8dfe8b9`.
name: Release Python
on:
  push:
    tags:
      - python/*
jobs:
  release-python:
    strategy:
      fail-fast: false
    runs-on: ubuntu-latest
    steps:
      - name: Determine version
        id: determineVersion
        run: |
          VERSION=$(echo ${{ github.event.ref }} | sed 's,refs/tags/python/,,g' | cut -f 1 -d \+)
          echo "value=${VERSION}" >> $GITHUB_OUTPUT
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Build Python
        run: make python/v${{ steps.determineVersion.outputs.value }}
      - name: Build Python Wasmedge
        run: make python/wasmedge-v${{ steps.determineVersion.outputs.value }}
      - name: Build Python AIO
        run: make python/aio-v${{ steps.determineVersion.outputs.value }}
      - name: Build Python AIO Wasmedge
        run: make python/aio-wasmedge-v${{ steps.determineVersion.outputs.value }}
      - name: Rename release artifacts
        shell: bash
        run: |
          sudo mv build-output/python/v${{ steps.determineVersion.outputs.value }}/bin/python{,-${{ steps.determineVersion.outputs.value }}}.wasm
          sudo mv build-output/python/v${{ steps.determineVersion.outputs.value }}-wasmedge/bin/python{,-${{ steps.determineVersion.outputs.value }}-wasmedge}.wasm
          sudo mv build-output/python/v${{ steps.determineVersion.outputs.value }}-aio/bin/python{,-${{ steps.determineVersion.outputs.value }}}.wasm
          sudo mv build-output/python/v${{ steps.determineVersion.outputs.value }}-aio-wasmedge/bin/python{,-${{ steps.determineVersion.outputs.value }}-wasmedge}.wasm
      - name: Bundle Python with standard libraries
        run: |
          tar -cvf python-${{ steps.determineVersion.outputs.value }}.tar \
            -C build-output/python/v${{ steps.determineVersion.outputs.value }}/ \
            bin/python-${{ steps.determineVersion.outputs.value }}.wasm \
            usr
          tar -rvf python-${{ steps.determineVersion.outputs.value }}.tar \
            -C build-output/python/v${{ steps.determineVersion.outputs.value }}-wasmedge/ \
            bin/python-${{ steps.determineVersion.outputs.value }}-wasmedge.wasm
          gzip python-${{ steps.determineVersion.outputs.value }}.tar
      - name: Create release
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release create --generate-notes ${{ github.ref_name }} || true
      - name: Append Python release assets
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release upload ${{ github.ref_name }} \
            python-${{ steps.determineVersion.outputs.value }}.tar.gz \
            libpython-${{ steps.determineVersion.outputs.value }}.tar.gz \
            build-output/python/v${{ steps.determineVersion.outputs.value }}-aio/bin/python-${{ steps.determineVersion.outputs.value }}.wasm \
            build-output/python/v${{ steps.determineVersion.outputs.value }}-aio-wasmedge/bin/python-${{ steps.determineVersion.outputs.value }}-wasmedge.wasm
      - name: Generate release assets digests
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          for asset in \
              python-${{ steps.determineVersion.outputs.value }}.tar.gz \
              libpython-${{ steps.determineVersion.outputs.value }}.tar.gz \
              build-output/python/v${{ steps.determineVersion.outputs.value }}-aio/bin/python-${{ steps.determineVersion.outputs.value }}.wasm \
              build-output/python/v${{ steps.determineVersion.outputs.value }}-aio-wasmedge/bin/python-${{ steps.determineVersion.outputs.value }}-wasmedge.wasm; \
          do
            sha256sum "$asset" | sudo tee "$asset.sha256sum" > /dev/null
          done
      - name: Append release assets digests
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release upload ${{ github.ref_name }} \
            python-${{ steps.determineVersion.outputs.value }}.tar.gz.sha256sum \
            libpython-${{ steps.determineVersion.outputs.value }}.tar.gz.sha256sum \
            build-output/python/v${{ steps.determineVersion.outputs.value }}-aio/bin/python-${{ steps.determineVersion.outputs.value }}.wasm.sha256sum \
            build-output/python/v${{ steps.determineVersion.outputs.value }}-aio-wasmedge/bin/python-${{ steps.determineVersion.outputs.value }}-wasmedge.wasm.sha256sum
